{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "add",
          "type": "address"
        }
      ],
      "name": "getAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "add",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "getETHAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5f0469c320b0dba874f8ab8fe6f3b710361579d7543d91941a55ab269df268a1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1713404",
    "logsBloom": "0x
    "blockHash": "0xd99cddfd674a1997f3c5fa076533b7ca2539d981c87fb18059b86408210fba99",
    "transactionHash": "0x5f0469c320b0dba874f8ab8fe6f3b710361579d7543d91941a55ab269df268a1",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x5f0469c320b0dba874f8ab8fe6f3b710361579d7543d91941a55ab269df268a1",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb9226600000000000000000000000000000000000000000000000000000000000f4240",
        "logIndex": 0,
        "blockHash": "0xd99cddfd674a1997f3c5fa076533b7ca2539d981c87fb18059b86408210fba99"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "1713404",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "5fd76cd7b604c9cf9e56b23845ec6e04",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"getAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"getETHAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YMToken.sol\":\"YMToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(\\n        uint256 usdAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 usdAmountinETH = (usdAmount * (10**18)) / (ethPrice);\\n        return usdAmountinETH;\\n    }\\n}\\n\",\"keccak256\":\"0x5e333a3915577455b5effc3d1153268d3f36af79575ed4913d2a72b7d01a3ca2\",\"license\":\"MIT\"},\"contracts/YMToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Implementing a ERC20 Token\\n// Will have basic functionalities like transfer/balance etc.\\n// Minting a million tokens and making them public for $2.\\n// Author : Yash Mathur\\n\\npragma solidity ^0.8.7;\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract YMToken {\\n    string public _symbol;\\n    string public _name;\\n    uint256 public _decimals;\\n    uint256 public _totalSupply;\\n    address public _minter;\\n\\n    mapping(address => uint256) balances;\\n    mapping(address => mapping(address => uint256)) allowances;\\n\\n    event Transfer(address from, address to, uint256 value);\\n    event Approval(address owner, address sender, uint256 value);\\n    event Burn(address owner, uint256 value);\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        _symbol = \\\"DUPL\\\";\\n        _name = \\\"DUPLICATE\\\";\\n        _decimals = 18;\\n        _minter = msg.sender;\\n        _totalSupply = 1000000;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n\\n        balances[_minter] = _totalSupply;\\n        allowances[_minter][_minter] = _totalSupply;\\n        emit Transfer(address(0), _minter, _totalSupply);\\n    }\\n\\n    function getName() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    function getBalance(address add) public view returns (uint256) {\\n        return balances[add];\\n    }\\n\\n    function getAllowance(address add) public view returns (uint256) {\\n        return allowances[add][msg.sender];\\n    }\\n\\n    function getMinter() public view returns (address) {\\n        return _minter;\\n    }\\n\\n    function getConversionRate() public view returns (uint256) {\\n        return PriceConverter.getPrice(priceFeed);\\n    }\\n\\n    function getETHAmount(uint256 value) public view returns (uint256) {\\n        uint256 amountToBePaid = value * 2 * (10**18);\\n        uint256 ethAmountInUsd = PriceConverter.getConversionRate(\\n            amountToBePaid,\\n            priceFeed\\n        );\\n\\n        return ethAmountInUsd;\\n    }\\n\\n    function getSymbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function getDecimals() public view returns (uint256) {\\n        return _decimals;\\n    }\\n\\n    function getTotalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n\\n    function transfer(address to, uint256 value)\\n        public\\n        payable\\n        returns (bool, uint256)\\n    {\\n        uint256 amountToBePaid = value * 2 * (10**18);\\n        uint256 ethAmountInUsd = PriceConverter.getConversionRate(\\n            amountToBePaid,\\n            priceFeed\\n        );\\n        require(\\n            balances[to] >= value &&\\n                allowances[to][msg.sender] >= value &&\\n                ethAmountInUsd > 0,\\n            \\\"Either you do not have sufficient balance or you are not allowed\\\\\\n        to transfer this much amount or you are trying to transfer 0 amount\\\"\\n        );\\n        balances[to] -= value;\\n        balances[msg.sender] += value;\\n\\n        emit Transfer(msg.sender, to, value);\\n\\n        return (true, ethAmountInUsd);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) public payable returns (bool, uint256) {\\n        uint256 amountToBePaid = value * 2 * (10**18);\\n        uint256 ethAmountInUsd = PriceConverter.getConversionRate(\\n            amountToBePaid,\\n            priceFeed\\n        );\\n        require(\\n            balances[from] >= value &&\\n                allowances[from][msg.sender] >= value &&\\n                ethAmountInUsd > 0,\\n            \\\"Either you do not have sufficient balance or you are not allowed\\\\\\n        to transfer this much amount or you are trying to transfer 0 amount\\\"\\n        );\\n        (bool callSuccess, ) = payable(from).call{value: ethAmountInUsd}(\\\"\\\");\\n        balances[from] -= value;\\n        balances[to] += value;\\n\\n        emit Transfer(from, to, value);\\n\\n        return (true, ethAmountInUsd);\\n    }\\n\\n    function approve(address sender, uint256 value) public returns (bool) {\\n        allowances[sender][msg.sender] = value;\\n        emit Approval(msg.sender, sender, value);\\n\\n        return true;\\n    }\\n\\n    function burn(uint256 value) public returns (bool) {\\n        assert(balances[msg.sender] >= value);\\n        balances[msg.sender] -= value;\\n        _totalSupply -= value;\\n\\n        emit Burn(msg.sender, value);\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xf4a77091aae0eee7ae385ef8f0ca8e2f75b48649b34a08a3455875c6dea3eae7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001fa238038062001fa28339818101604052810190620000379190620003c6565b6040518060400160405280600481526020017f4455504c000000000000000000000000000000000000000000000000000000008152506000908051906020019062000084929190620002ff565b506040518060400160405280600981526020017f4455504c4943415445000000000000000000000000000000000000000000000081525060019080519060200190620000d2929190620002ff565b50601260028190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620f424060038190555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060035460056000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060035460066000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600354604051620002f0939291906200041a565b60405180910390a15062000519565b8280546200030d9062000495565b90600052602060002090601f0160209004810192826200033157600085556200037d565b82601f106200034c57805160ff19168380011785556200037d565b828001600101855582156200037d579182015b828111156200037c5782518255916020019190600101906200035f565b5b5090506200038c919062000390565b5090565b5b80821115620003ab57600081600090555060010162000391565b5090565b600081519050620003c081620004ff565b92915050565b600060208284031215620003df57620003de620004fa565b5b6000620003ef84828501620003af565b91505092915050565b620004038162000457565b82525050565b62000414816200048b565b82525050565b6000606082019050620004316000830186620003f8565b620004406020830185620003f8565b6200044f604083018462000409565b949350505050565b600062000464826200046b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680620004ae57607f821691505b60208210811415620004c557620004c4620004cb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6200050a8162000457565b81146200051657600080fd5b50565b611a7980620005296000396000f3fe60806040526004361061011f5760003560e01c8063a9059cbb116100a0578063ef46b2ab11610064578063ef46b2ab146103eb578063f0141d8414610428578063f36089ec14610453578063f36675171461047e578063f8b2cb4f146104a95761011f565b8063a9059cbb146102fc578063b09f12661461032d578063c4e41b2214610358578063d28d885214610383578063eb5a662e146103ae5761011f565b80633eaaf86b116100e75780633eaaf86b1461021357806342966c681461023e578063578ec33f1461027b578063741bef1a146102a65780639e87a5cd146102d15761011f565b8063095ea7b314610124578063150704011461016157806317d7de7c1461018c57806323b872dd146101b757806332424aa3146101e8575b600080fd5b34801561013057600080fd5b5061014b6004803603810190610146919061120c565b6104e6565b604051610158919061143f565b60405180910390f35b34801561016d57600080fd5b506101766105ae565b604051610183919061149e565b60405180910390f35b34801561019857600080fd5b506101a1610640565b6040516101ae919061149e565b60405180910390f35b6101d160048036038101906101cc91906111b9565b6106d2565b6040516101df92919061145a565b60405180910390f35b3480156101f457600080fd5b506101fd6109a4565b60405161020a91906114e0565b60405180910390f35b34801561021f57600080fd5b506102286109aa565b60405161023591906114e0565b60405180910390f35b34801561024a57600080fd5b506102656004803603810190610260919061124c565b6109b0565b604051610272919061143f565b60405180910390f35b34801561028757600080fd5b50610290610ab3565b60405161029d91906113c4565b60405180910390f35b3480156102b257600080fd5b506102bb610ad9565b6040516102c89190611483565b60405180910390f35b3480156102dd57600080fd5b506102e6610aff565b6040516102f39190611483565b60405180910390f35b6103166004803603810190610311919061120c565b610b29565b60405161032492919061145a565b60405180910390f35b34801561033957600080fd5b50610342610d8d565b60405161034f919061149e565b60405180910390f35b34801561036457600080fd5b5061036d610e1b565b60405161037a91906114e0565b60405180910390f35b34801561038f57600080fd5b50610398610e25565b6040516103a5919061149e565b60405180910390f35b3480156103ba57600080fd5b506103d560048036038101906103d0919061118c565b610eb3565b6040516103e291906114e0565b60405180910390f35b3480156103f757600080fd5b50610412600480360381019061040d919061124c565b610f39565b60405161041f91906114e0565b60405180910390f35b34801561043457600080fd5b5061043d610f98565b60405161044a91906114e0565b60405180910390f35b34801561045f57600080fd5b50610468610fa2565b60405161047591906114e0565b60405180910390f35b34801561048a57600080fd5b50610493610fd4565b6040516104a091906113c4565b60405180910390f35b3480156104b557600080fd5b506104d060048036038101906104cb919061118c565b610ffe565b6040516104dd91906114e0565b60405180910390f35b600081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92533848460405161059c939291906113df565b60405180910390a16001905092915050565b6060600080546105bd9061181f565b80601f01602080910402602001604051908101604052809291908181526020018280546105e99061181f565b80156106365780601f1061060b57610100808354040283529160200191610636565b820191906000526020600020905b81548152906001019060200180831161061957829003601f168201915b5050505050905090565b60606001805461064f9061181f565b80601f016020809104026020016040519081016040528092919081815260200182805461067b9061181f565b80156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b5050505050905090565b6000806000670de0b6b3a76400006002856106ed91906116c0565b6106f791906116c0565b9050600061072782600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611047565b905084600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107f4575084600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156108005750600081115b61083f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610836906114c0565b60405180910390fd5b60008773ffffffffffffffffffffffffffffffffffffffff1682604051610865906113af565b60006040518083038185875af1925050503d80600081146108a2576040519150601f19603f3d011682016040523d82523d6000602084013e6108a7565b606091505b5050905085600560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108fa919061171a565b9250508190555085600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109509190611522565b925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef88888860405161098a939291906113df565b60405180910390a160018294509450505050935093915050565b60025481565b60035481565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610a0257610a01611851565b5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a51919061171a565b925050819055508160036000828254610a6a919061171a565b925050819055507fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca53383604051610aa2929190611416565b60405180910390a160019050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000670de0b6b3a7640000600285610b4491906116c0565b610b4e91906116c0565b90506000610b7e82600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611047565b905084600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610c4b575084600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610c575750600081115b610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d906114c0565b60405180910390fd5b84600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ce5919061171a565b9250508190555084600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d3b9190611522565b925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef338787604051610d75939291906113df565b60405180910390a16001819350935050509250929050565b60008054610d9a9061181f565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc69061181f565b8015610e135780601f10610de857610100808354040283529160200191610e13565b820191906000526020600020905b815481529060010190602001808311610df657829003601f168201915b505050505081565b6000600354905090565b60018054610e329061181f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5e9061181f565b8015610eab5780601f10610e8057610100808354040283529160200191610eab565b820191906000526020600020905b815481529060010190602001808311610e8e57829003601f168201915b505050505081565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080670de0b6b3a7640000600284610f5291906116c0565b610f5c91906116c0565b90506000610f8c82600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611047565b90508092505050919050565b6000600254905090565b6000610fcf600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611083565b905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008061105383611083565b9050600081670de0b6b3a76400008661106c91906116c0565b6110769190611578565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156110cc57600080fd5b505afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190611279565b5050509150506402540be4008161111b91906115a9565b915050919050565b600081359050611132816119e7565b92915050565b600081519050611147816119fe565b92915050565b60008135905061115c81611a15565b92915050565b60008151905061117181611a15565b92915050565b60008151905061118681611a2c565b92915050565b6000602082840312156111a2576111a161190d565b5b60006111b084828501611123565b91505092915050565b6000806000606084860312156111d2576111d161190d565b5b60006111e086828701611123565b93505060206111f186828701611123565b92505060406112028682870161114d565b9150509250925092565b600080604083850312156112235761122261190d565b5b600061123185828601611123565b92505060206112428582860161114d565b9150509250929050565b6000602082840312156112625761126161190d565b5b60006112708482850161114d565b91505092915050565b600080600080600060a086880312156112955761129461190d565b5b60006112a388828901611177565b95505060206112b488828901611138565b94505060406112c588828901611162565b93505060606112d688828901611162565b92505060806112e788828901611177565b9150509295509295909350565b6112fd8161174e565b82525050565b61130c81611760565b82525050565b61131b816117b6565b82525050565b600061132c826114fb565b6113368185611511565b93506113468185602086016117ec565b61134f81611912565b840191505092915050565b6000611367608b83611511565b915061137282611923565b60a082019050919050565b600061138a600083611506565b9150611395826119e4565b600082019050919050565b6113a981611796565b82525050565b60006113ba8261137d565b9150819050919050565b60006020820190506113d960008301846112f4565b92915050565b60006060820190506113f460008301866112f4565b61140160208301856112f4565b61140e60408301846113a0565b949350505050565b600060408201905061142b60008301856112f4565b61143860208301846113a0565b9392505050565b60006020820190506114546000830184611303565b92915050565b600060408201905061146f6000830185611303565b61147c60208301846113a0565b9392505050565b60006020820190506114986000830184611312565b92915050565b600060208201905081810360008301526114b88184611321565b905092915050565b600060208201905081810360008301526114d98161135a565b9050919050565b60006020820190506114f560008301846113a0565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061152d82611796565b915061153883611796565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561156d5761156c611880565b5b828201905092915050565b600061158382611796565b915061158e83611796565b92508261159e5761159d6118af565b5b828204905092915050565b60006115b48261176c565b91506115bf8361176c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156115fe576115fd611880565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561163b5761163a611880565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561167857611677611880565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156116b5576116b4611880565b5b828202905092915050565b60006116cb82611796565b91506116d683611796565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561170f5761170e611880565b5b828202905092915050565b600061172582611796565b915061173083611796565b92508282101561174357611742611880565b5b828203905092915050565b600061175982611776565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006117c1826117c8565b9050919050565b60006117d3826117da565b9050919050565b60006117e582611776565b9050919050565b60005b8381101561180a5780820151818401526020810190506117ef565b83811115611819576000848401525b50505050565b6000600282049050600182168061183757607f821691505b6020821081141561184b5761184a6118de565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45697468657220796f7520646f206e6f7420686176652073756666696369656e60008201527f742062616c616e6365206f7220796f7520617265206e6f7420616c6c6f77656460208201527f2020202020202020746f207472616e736665722074686973206d75636820616d60408201527f6f756e74206f7220796f752061726520747279696e6720746f207472616e736660608201527f6572203020616d6f756e74000000000000000000000000000000000000000000608082015250565b50565b6119f08161174e565b81146119fb57600080fd5b50565b611a078161176c565b8114611a1257600080fd5b50565b611a1e81611796565b8114611a2957600080fd5b50565b611a35816117a0565b8114611a4057600080fd5b5056fea2646970667358221220fbba042c3ce2aa936129e7a4185f473058aec2b488038daa9170ab60b6e61ab464736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c8063a9059cbb116100a0578063ef46b2ab11610064578063ef46b2ab146103eb578063f0141d8414610428578063f36089ec14610453578063f36675171461047e578063f8b2cb4f146104a95761011f565b8063a9059cbb146102fc578063b09f12661461032d578063c4e41b2214610358578063d28d885214610383578063eb5a662e146103ae5761011f565b80633eaaf86b116100e75780633eaaf86b1461021357806342966c681461023e578063578ec33f1461027b578063741bef1a146102a65780639e87a5cd146102d15761011f565b8063095ea7b314610124578063150704011461016157806317d7de7c1461018c57806323b872dd146101b757806332424aa3146101e8575b600080fd5b34801561013057600080fd5b5061014b6004803603810190610146919061120c565b6104e6565b604051610158919061143f565b60405180910390f35b34801561016d57600080fd5b506101766105ae565b604051610183919061149e565b60405180910390f35b34801561019857600080fd5b506101a1610640565b6040516101ae919061149e565b60405180910390f35b6101d160048036038101906101cc91906111b9565b6106d2565b6040516101df92919061145a565b60405180910390f35b3480156101f457600080fd5b506101fd6109a4565b60405161020a91906114e0565b60405180910390f35b34801561021f57600080fd5b506102286109aa565b60405161023591906114e0565b60405180910390f35b34801561024a57600080fd5b506102656004803603810190610260919061124c565b6109b0565b604051610272919061143f565b60405180910390f35b34801561028757600080fd5b50610290610ab3565b60405161029d91906113c4565b60405180910390f35b3480156102b257600080fd5b506102bb610ad9565b6040516102c89190611483565b60405180910390f35b3480156102dd57600080fd5b506102e6610aff565b6040516102f39190611483565b60405180910390f35b6103166004803603810190610311919061120c565b610b29565b60405161032492919061145a565b60405180910390f35b34801561033957600080fd5b50610342610d8d565b60405161034f919061149e565b60405180910390f35b34801561036457600080fd5b5061036d610e1b565b60405161037a91906114e0565b60405180910390f35b34801561038f57600080fd5b50610398610e25565b6040516103a5919061149e565b60405180910390f35b3480156103ba57600080fd5b506103d560048036038101906103d0919061118c565b610eb3565b6040516103e291906114e0565b60405180910390f35b3480156103f757600080fd5b50610412600480360381019061040d919061124c565b610f39565b60405161041f91906114e0565b60405180910390f35b34801561043457600080fd5b5061043d610f98565b60405161044a91906114e0565b60405180910390f35b34801561045f57600080fd5b50610468610fa2565b60405161047591906114e0565b60405180910390f35b34801561048a57600080fd5b50610493610fd4565b6040516104a091906113c4565b60405180910390f35b3480156104b557600080fd5b506104d060048036038101906104cb919061118c565b610ffe565b6040516104dd91906114e0565b60405180910390f35b600081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92533848460405161059c939291906113df565b60405180910390a16001905092915050565b6060600080546105bd9061181f565b80601f01602080910402602001604051908101604052809291908181526020018280546105e99061181f565b80156106365780601f1061060b57610100808354040283529160200191610636565b820191906000526020600020905b81548152906001019060200180831161061957829003601f168201915b5050505050905090565b60606001805461064f9061181f565b80601f016020809104026020016040519081016040528092919081815260200182805461067b9061181f565b80156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b5050505050905090565b6000806000670de0b6b3a76400006002856106ed91906116c0565b6106f791906116c0565b9050600061072782600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611047565b905084600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107f4575084600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156108005750600081115b61083f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610836906114c0565b60405180910390fd5b60008773ffffffffffffffffffffffffffffffffffffffff1682604051610865906113af565b60006040518083038185875af1925050503d80600081146108a2576040519150601f19603f3d011682016040523d82523d6000602084013e6108a7565b606091505b5050905085600560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108fa919061171a565b9250508190555085600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109509190611522565b925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef88888860405161098a939291906113df565b60405180910390a160018294509450505050935093915050565b60025481565b60035481565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610a0257610a01611851565b5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a51919061171a565b925050819055508160036000828254610a6a919061171a565b925050819055507fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca53383604051610aa2929190611416565b60405180910390a160019050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000670de0b6b3a7640000600285610b4491906116c0565b610b4e91906116c0565b90506000610b7e82600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611047565b905084600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610c4b575084600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610c575750600081115b610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d906114c0565b60405180910390fd5b84600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ce5919061171a565b9250508190555084600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d3b9190611522565b925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef338787604051610d75939291906113df565b60405180910390a16001819350935050509250929050565b60008054610d9a9061181f565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc69061181f565b8015610e135780601f10610de857610100808354040283529160200191610e13565b820191906000526020600020905b815481529060010190602001808311610df657829003601f168201915b505050505081565b6000600354905090565b60018054610e329061181f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5e9061181f565b8015610eab5780601f10610e8057610100808354040283529160200191610eab565b820191906000526020600020905b815481529060010190602001808311610e8e57829003601f168201915b505050505081565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080670de0b6b3a7640000600284610f5291906116c0565b610f5c91906116c0565b90506000610f8c82600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611047565b90508092505050919050565b6000600254905090565b6000610fcf600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611083565b905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008061105383611083565b9050600081670de0b6b3a76400008661106c91906116c0565b6110769190611578565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156110cc57600080fd5b505afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190611279565b5050509150506402540be4008161111b91906115a9565b915050919050565b600081359050611132816119e7565b92915050565b600081519050611147816119fe565b92915050565b60008135905061115c81611a15565b92915050565b60008151905061117181611a15565b92915050565b60008151905061118681611a2c565b92915050565b6000602082840312156111a2576111a161190d565b5b60006111b084828501611123565b91505092915050565b6000806000606084860312156111d2576111d161190d565b5b60006111e086828701611123565b93505060206111f186828701611123565b92505060406112028682870161114d565b9150509250925092565b600080604083850312156112235761122261190d565b5b600061123185828601611123565b92505060206112428582860161114d565b9150509250929050565b6000602082840312156112625761126161190d565b5b60006112708482850161114d565b91505092915050565b600080600080600060a086880312156112955761129461190d565b5b60006112a388828901611177565b95505060206112b488828901611138565b94505060406112c588828901611162565b93505060606112d688828901611162565b92505060806112e788828901611177565b9150509295509295909350565b6112fd8161174e565b82525050565b61130c81611760565b82525050565b61131b816117b6565b82525050565b600061132c826114fb565b6113368185611511565b93506113468185602086016117ec565b61134f81611912565b840191505092915050565b6000611367608b83611511565b915061137282611923565b60a082019050919050565b600061138a600083611506565b9150611395826119e4565b600082019050919050565b6113a981611796565b82525050565b60006113ba8261137d565b9150819050919050565b60006020820190506113d960008301846112f4565b92915050565b60006060820190506113f460008301866112f4565b61140160208301856112f4565b61140e60408301846113a0565b949350505050565b600060408201905061142b60008301856112f4565b61143860208301846113a0565b9392505050565b60006020820190506114546000830184611303565b92915050565b600060408201905061146f6000830185611303565b61147c60208301846113a0565b9392505050565b60006020820190506114986000830184611312565b92915050565b600060208201905081810360008301526114b88184611321565b905092915050565b600060208201905081810360008301526114d98161135a565b9050919050565b60006020820190506114f560008301846113a0565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061152d82611796565b915061153883611796565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561156d5761156c611880565b5b828201905092915050565b600061158382611796565b915061158e83611796565b92508261159e5761159d6118af565b5b828204905092915050565b60006115b48261176c565b91506115bf8361176c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156115fe576115fd611880565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561163b5761163a611880565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561167857611677611880565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156116b5576116b4611880565b5b828202905092915050565b60006116cb82611796565b91506116d683611796565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561170f5761170e611880565b5b828202905092915050565b600061172582611796565b915061173083611796565b92508282101561174357611742611880565b5b828203905092915050565b600061175982611776565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006117c1826117c8565b9050919050565b60006117d3826117da565b9050919050565b60006117e582611776565b9050919050565b60005b8381101561180a5780820151818401526020810190506117ef565b83811115611819576000848401525b50505050565b6000600282049050600182168061183757607f821691505b6020821081141561184b5761184a6118de565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45697468657220796f7520646f206e6f7420686176652073756666696369656e60008201527f742062616c616e6365206f7220796f7520617265206e6f7420616c6c6f77656460208201527f2020202020202020746f207472616e736665722074686973206d75636820616d60408201527f6f756e74206f7220796f752061726520747279696e6720746f207472616e736660608201527f6572203020616d6f756e74000000000000000000000000000000000000000000608082015250565b50565b6119f08161174e565b81146119fb57600080fd5b50565b611a078161176c565b8114611a1257600080fd5b50565b611a1e81611796565b8114611a2957600080fd5b50565b611a35816117a0565b8114611a4057600080fd5b5056fea2646970667358221220fbba042c3ce2aa936129e7a4185f473058aec2b488038daa9170ab60b6e61ab464736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 108,
        "contract": "contracts/YMToken.sol:YMToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 110,
        "contract": "contracts/YMToken.sol:YMToken",
        "label": "_name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 112,
        "contract": "contracts/YMToken.sol:YMToken",
        "label": "_decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 114,
        "contract": "contracts/YMToken.sol:YMToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 116,
        "contract": "contracts/YMToken.sol:YMToken",
        "label": "_minter",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 120,
        "contract": "contracts/YMToken.sol:YMToken",
        "label": "balances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 126,
        "contract": "contracts/YMToken.sol:YMToken",
        "label": "allowances",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 151,
        "contract": "contracts/YMToken.sol:YMToken",
        "label": "priceFeed",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}